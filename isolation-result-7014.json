{
    "critiques": {
        "680": {
            "rubric_items": {
                "5510": {
                    "result": "failed",
                    "observation": "{\"15. Submission includes research_review.pdf\": {\"traceback\": \"AssertionError: False is not true : You must submit a report named research_review.pdf for review.\\n\"}, \"13. Test output interface of custom_score_3()\": {\"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_uacedjvq/workspace/game_agent.py\\\", line 90, in custom_score_3\\n    raise NotImplementedError\\nNotImplementedError\\n\"}, \"8. Test that alphabeta() raises SearchTimeout when the timer expires\": {\"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_uacedjvq/workspace/game_agent.py\\\", line 330, in alphabeta\\n    raise NotImplementedError\\nNotImplementedError\\n\"}, \"10. Test that AlphaBetaPlayer successfully plays a full game\": {\"traceback\": \"Traceback (most recent call last):\\nNotImplementedError\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\\nException: \\n\"}, \"14. Submission includes heuristic_analysis.pdf\": {\"traceback\": \"AssertionError: False is not true : You must submit a report named heuristic_analysis.pdf for review.\\n\"}, \"6. Test the interface of AlphaBetaPlayer.get_move()\": {\"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_uacedjvq/workspace/game_agent.py\\\", line 279, in get_move\\n    raise NotImplementedError\\nNotImplementedError\\n\"}, \"5. Test interface of AlphaBetaPlayer.alphabeta()\": {\"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_uacedjvq/workspace/game_agent.py\\\", line 330, in alphabeta\\n    raise NotImplementedError\\nNotImplementedError\\n\"}, \"2. Test functionality of MinimaxPlayer.minimax()\": {\"traceback\": \"AssertionError: False is not true : Your MinimaxAgent.minimax function did not visit every node in the game tree as player 1.  First check for off-by-one errors in your handling of the depth limiting. Then, especially if the number of nodes explored by your agent is too low, check everywhere you call to game.get_legal_moves() to make sure you are getting the legal moves for the appropriate player at each level of the game tree.  Finally, you may be using non-standard search optimizations that are not supported by the test cases. \\n\\nExpected number of visited nodes: 2.3333333333333335-7\\nNumber of nodes your agent explored: 0\\n\\nTest Case Details:\\n------------------\\nHeuristic: open_move_score\\nDepth limit: 1\\nInitial Board State:\\n      0   1   2   3   4   5   6   7   8   9   10\\n\\r0   |   |   |   |   |   |   |   |   |   |   |   | \\n\\r1   |   |   | - | 2 |   |   |   |   |   |   |   | \\n\\r2   |   |   |   | - |   | - | - | - | - |   |   | \\n\\r3   |   |   |   | - |   | - | - | - |   |   |   | \\n\\r4   |   |   | 1 |   |   | - |   | - | - |   |   | \\n\\r5   |   |   | - |   |   |   |   |   | - |   |   | \\n\\r6   |   |   |   |   |   |   |   |   |   |   |   | \\n\\r7   |   |   |   | - |   |   |   | - |   |   |   | \\n\\r8   |   |   |   |   |   | - |   |   |   |   |   | \\n\\r9   |   |   |   |   |   |   |   |   |   |   |   | \\n\\r10  |   |   |   |   |   |   |   |   |   |   |   | \\n\\r\\n\\n\"}, \"9. Test iterative deepening in AlphaBetaPlayer.get_move()\": {\"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_uacedjvq/workspace/game_agent.py\\\", line 279, in get_move\\n    raise NotImplementedError\\nNotImplementedError\\n\"}, \"7. Test functionality of AlphaBetaPlayer.alphabeta()\": {\"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_uacedjvq/workspace/game_agent.py\\\", line 330, in alphabeta\\n    raise NotImplementedError\\nNotImplementedError\\n\"}, \"12. Test output interface of custom_score_2()\": {\"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_uacedjvq/workspace/game_agent.py\\\", line 64, in custom_score_2\\n    raise NotImplementedError\\nNotImplementedError\\n\"}, \"3. Test that minimax() raises SearchTimeout when the timer expires\": {\"traceback\": \"AssertionError: None is not an instance of (<class 'tuple'>, <class 'list'>) : The minimax method should return a tuple containing board coordinates. Your method returned: <class 'NoneType'>\\n\"}, \"11. Test output interface of custom_score()\": {\"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_uacedjvq/workspace/game_agent.py\\\", line 38, in custom_score\\n    raise NotImplementedError\\nNotImplementedError\\n\"}}"
                }
            }
        }
    }
}